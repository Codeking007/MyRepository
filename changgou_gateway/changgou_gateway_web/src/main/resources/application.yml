spring:
  application:
    name: gateway-web
  cloud:
    gateway:
      #添加此全局跨域过滤器后，Controller中就不再需要@CrossOrigin注解
      globalcors:
        cors-configurations:
          '[/**]': # 匹配所有请求
            allowedOrigins: "*" #跨域处理 允许所有的域
            allowedMethods: # 支持的方法
              - GET
              - POST
              - PUT
              - DELETE
      routes:
        - id: changgou_goods_route  #路由唯一标识
#          uri: http://localhost:18081 #路由转发地址
          uri: lb://goods #发送给注册服务名字为goods的服务器
          # 路由断言：路由拦截规则
          predicates:
            # 拦截请求是cloud.itheima.com域名的请求
#            - Host=cloud.itheima.com**
            # 拦截路径为/brand的请求
            - Path=/**
          filters:
            # 自动添加请求前缀
#            - PrefixPath=/brand
            # 去除路径前缀,一个"/"识别为一个路径
            - StripPrefix=1
            - name: RequestRateLimiter #请求数限流 名字不能随便写 ，使用默认的factory
              args:
                # 用于通过SPEL表达式来指定使用哪一个KeyResolver，需要先在启动引导类中定义
                key-resolver: "#{@ipKeyResolver}"
                # 是您希望允许用户每秒执行多少请求，而不会丢弃任何请求。这是令牌桶填充的速率
                redis-rate-limiter.replenishRate: 1
                # 是指令牌桶的容量，允许在一秒钟内完成的最大请求数,将此值设置为零将阻止所有请求。
                redis-rate-limiter.burstCapacity: 2
  #gateway默认使用redis的RateLimter限流算法,需要连接redis
  redis:
    host: 192.168.211.132
    port: 6379
server:
  port: 8001
eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:7001/eureka
  instance:
    prefer-ip-address: true